configs:
  tyk_analytics:
    file: ./confs/tyk_analytics.conf
  tyk_gateway:
    file: ./confs/tyk.conf
  tyk_pump:
    file: ./confs/pump.conf
networks:
  tyk: {}
services:
  tyk-dashboard:
    configs:
    - source: tyk_analytics
      target: /opt/tyk-dashboard/tyk_analytics.conf
    depends_on:
    - tyk-mongo
    - tyk-redis
    deploy:
      mode: replicated
      replicas: 2
    image: tykio/tyk-dashboard:latest
    networks:
      tyk: null
    ports:
    - published: 3000
      target: 3000
    - published: 5000
      target: 5000
  tyk-gateway:
    configs:
    - source: tyk_gateway
      target: /opt/tyk-gateway/tyk.conf
    depends_on:
    - tyk-redis
    deploy:
      mode: replicated
      placement:
        constraints:
        - node.role != manager
      replicas: 2
    image: tykio/tyk-gateway:latest
    networks:
      tyk: null
    ports:
    - published: 8080
      target: 8080
  tyk-mongo:
    command:
    - mongod
    - --smallfiles
    deploy:
      placement:
        constraints:
        - node.role == manager
    image: mongo:3.2
    networks:
      tyk: null
    ports:
    - published: 27017
      target: 27017
    volumes:
    - mongo-data:/data/db:rw
  tyk-pump:
    configs:
    - source: tyk_pump
      target: /opt/tyk-pump/pump.conf
    depends_on:
    - tyk-gateway
    - tyk-mongo
    - tyk-redis
    deploy:
      mode: replicated
      replicas: 2
    image: tykio/tyk-pump-docker-pub:latest
    networks:
      tyk: null
  tyk-redis:
    deploy:
      placement:
        constraints:
        - node.role == manager
    image: redis
    networks:
      tyk: null
    ports:
    - published: 6379
      target: 6379
    volumes:
    - redis-data:/data:rw
version: '3.3'
volumes:
  mongo-data: {}
  redis-data: {}

